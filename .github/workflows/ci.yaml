name: CI/CD

on:
  push:
  pull_request:
  # Run daily at 0:01 UTC
  schedule:
    - cron: "1 0 * * 0"
  workflow_dispatch:

jobs:
  flake8:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Install dependencies
        env:
          servicex_version: 1.0a1
        run: |
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install --no-cache-dir -e .[test]
          python -m pip list
      - name: Lint with Flake8
        run: |
          flake8 --exclude=tests/* --ignore=E501,W503
      - name: Check for vulnerable libraries
        run: |
          python -m pip install safety
          python -m pip freeze | safety check

  test:
    needs:
      - flake8

    strategy:
      matrix:
        platform: [ubuntu-latest, windows-latest, macOS-latest]
        python-version: [3.8, 3.9, "3.10", "3.11", "3.12"]
    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        env:
          servicex_version: 1.0a1
        run: |
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install --no-cache-dir -e .[test]
          python -m pip list
      - name: Test with pytest
        run: |
          python -m pytest
      - name: Code coverage with pytest
        if: github.event_name == 'push' && matrix.platform == 'ubuntu-latest'
        run: |
          python -m pytest --ignore=setup.py --cov=servicex --cov-report=term-missing --cov-config=.coveragerc --cov-report xml
      - name: Report coverage with Codecov
        if: github.event_name == 'push' && matrix.platform == 'ubuntu-latest'
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml # optional
          flags: unittests-${{ matrix.python-version }} # optional
