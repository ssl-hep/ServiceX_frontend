name: Push to PyPI

on:
  release:
    types: [released, prereleased]

jobs:
  publish:
    runs-on: ubuntu-latest
    # Mandatory for publishing with a trusted publisher
    # c.f. https://docs.pypi.org/trusted-publishers/using-a-publisher/
    permissions:
      id-token: write

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install uv
      uses: astral-sh/setup-uv@v3

    - name: Install python-build and twine
      run: |
        uv pip install --system build twine
        uv pip list --system

    - name: Set env
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

    - name: Test
      run: |
        echo $RELEASE_VERSION
        echo ${{ env.RELEASE_VERSION }}

    - name: Update Version
      run: |
        sed -i '/version =/ s/= "[^"][^"]*"/ = "${{ env.RELEASE_VERSION }}"/' pyproject.toml

    - name: Build a sdist and wheel
      run: |
        python -m build .

    - name: Verify the distribution
      run: twine check --strict dist/*

    - name: List contents of sdist
      run: python -m tarfile --list dist/servicex-*.tar.gz

    - name: List contents of wheel
      run: python -m zipfile --list dist/servicex-*.whl

    - name: Upload distribution artifact
      uses: actions/upload-artifact@v4
      with:
        name: dist-artifact
        path: dist

    - name: Publish distribution ðŸ“¦ to PyPI
      if: github.repository == 'ssl-hep/ServiceX_frontend'
      uses: pypa/gh-action-pypi-publish@v1.8.14
      with:
        print-hash: true
